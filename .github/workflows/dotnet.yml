name: CI/CD Test

on:
  push:
    branches: [ "main" ]

jobs:
  api_tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Install Newman
        run: npm install -g newman

      - name: Restore dependencies
        run: dotnet restore
        working-directory: ./WTP-main

      - name: Build Project
        run: dotnet build --no-restore
        working-directory: ./WTP-main

      - name: Start server
        run: nohup dotnet run &
        working-directory: ./WTP-main/server

      - name: Run API Tests
        run: newman run ./Postman/WTP_Test.postman_collection.json

  gui_tests:
    runs-on: ubuntu-latest
    needs: api_tests

    steps:
      - uses: actions/checkout@v4

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
  
      - name: Restore backend dependencies
        run: dotnet restore
        working-directory: ./WTP-main
  
      - name: Install client dependencies
        run: npm install
        working-directory: ./WTP-main/client
  
      - name: Build React client (production)
        run: |
          npm run build
          ls -la ../server/wwwroot
        working-directory: ./WTP-main/client
  
      - name: Install serve (static file server)
        run: npm install -g serve
  
      - name: Serve built client
        run: nohup serve -s ../server/wwwroot -l 3002 > serve.log 2>&1 &
        working-directory: ./WTP-main/client
  
      - name: Wait for frontend
        run: npx wait-on http://localhost:3002
  
      - name: Start backend
        run: nohup dotnet run &>/dev/null &
        working-directory: ./WTP-main/server
  
      - name: Wait for backend
        run: npx wait-on http://localhost:5000
  
      - name: Build Playwright tests
        run: dotnet build
        working-directory: ./END2ENDTester
  
      - name: Install Playwright browsers
        run: pwsh bin/Debug/net8.0/playwright.ps1 install --with-deps
        working-directory: ./END2ENDTester

      - name: Install xvfb
        run: sudo apt-get update && sudo apt-get install -y xvfb
  
      - name: Run GUI Tests
        run: dotnet test
        working-directory: ./END2ENDTester
  
      - name: Upload debug artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-artifacts
          path: ./END2ENDTester/company_field_debug.*
  
      - name: Upload debug HTML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-artifacts
          path: company_field_debug.*
  
      - name: Upload serve log (if any issue)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: serve-log
          path: ./WTP-main/client/serve.log


  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: [api_tests, gui_tests]

    steps:
      - name: Deploy App
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd /srv/www/malmo/kevin/https://github.com/ecthelionofthefountain-510/test-wtp-last-stand.git
            git clone
